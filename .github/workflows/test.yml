name: test-workflow

on: push

env:
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_RELEASE_OPT_LEVEL: 1
  CARGO_PROFILE_RELEASE_DEBUG: 0

defaults:
  run:
    shell: bash -l {0}
jobs:
  download-redis:
    runs-on: ubuntu-latest
    steps:
    - name: Start Redis
      run: >-
        docker run 
        -p 6379:6379
        -pull "always"
        redis 
        redis-server --appendonly yes --save 60 1 &
  # install-cypress:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout 
  #       uses: actions/checkout@v3

  #     - name: Cache node modules
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

  #     - name: Cache Cypress binary
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cache/Cypress
  #         key: cypress2-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

  #     - name: Install dependencies 
  #       run: npm i --prefer-offline --no-audit --no-fund

  # run-cypress:
  #   runs-on: ubuntu-latest
  #   needs: [install-cypress]
  #   steps:
  #     - name: Checkout 
  #       uses: actions/checkout@v3
      
  #     - name: Cache Cypress binary
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cache/Cypress
  #         key: cypress2-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      
  #     - name: npm install 
  #       run: npm install cypress@9.7.0 -g --loglevel verbose

  #     - name: Run Cypress tests
  #       run: >-
  #         npx cypress run 

          
  #     # - name: Start Redis
  #     #   run: |
  #     #     docker run -p 6379:6379 redis redis-server --appendonly yes --save 60 1 &

  #     # - name: Install Conda environment with Micromamba
  #     #   uses: mamba-org/provision-with-micromamba@main
  #     #   with:
  #     #     environment-file: api/allen.yaml
  #     #     cache-downloads: true
  #     #     cache-env: true

  #     # - name: Activate env
  #     #   run: micromamba activate allen

  #     # - uses: Swatinem/rust-cache@v1.4.0
  #     #   with:
  #     #     cache-on-failure: true

  #     # # - name: Install Maturin
  #     # # - run: pip install maturin

  #     # # - name: Maturin build
  #     # #   run: maturin build --manifest-path Cargo.toml

  #     # - uses: messense/maturin-action@v1
  #     #   with:
  #     #     maturin-version: latest
  #     #     command: build
  #     #     args: --manifest-path Cargo.toml
  #     # - name: Cache node modules
  #     #   uses: actions/cache@v2
  #     #   with:
  #     #     path: ~/.npm
  #     #     key: ${{ runner.os }}-${{ hashFiles('**package-lock.json') }}

  #     # - name: Cache Cypress binary
  #     #   uses: actions/cache@v2
  #     #   with:
  #     #     path: ~/.cache/Cypress
  #     #     key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**package.json') }}


  #     # - name: npm install
  #     #   run: npm ci --prefer-offline --no-audit
